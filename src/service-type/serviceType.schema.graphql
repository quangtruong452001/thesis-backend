extend type Query {
  "Query service type"
  serviceTypes: [ServiceType!]!
  serviceType(id: ID!): ServiceType
  recommendService: [ServiceType!]!
  getTopService: [TopService]
}

extend type Mutation {
  createServiceType(serviceType: ServiceTypeInput!): ServiceType!
  updateServiceType(id: ID!, serviceType: UpdateServiceTypeInput!): ServiceType!
  deleteServiceType(id: ID!): ServiceType
}
type TopService {
  name: String
  count: Int
}
type ServiceType {
  _id: ID!
  name: String
  price: [ServicePrice]
  selectedCount: Int
  description: String
  timeServe: String
  typeId: Int
}

type ServicePrice {
  name: String
  serviceId: Int
  price: String
  priceNumber: Float
  minWeight: Float
  maxWeight: Float
  updatedAt: DateTime
}
input ServicePriceInput {
  name: String
  serviceId: Int
  price: String
  priceNumber: Float
  minWeight: Float
  maxWeight: Float
  updatedAt: DateTime
}
input ServiceTypeInput {
  name: String
  price: [ServicePriceInput]
  description: String
  timeServe: String
  selectedCount: Int
  typeId: Int
}

input UpdateServiceTypeInput {
  name: String
  price: [ServicePriceInput]
  description: String
  timeServe: String
}
